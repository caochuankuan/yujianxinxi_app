name: Android CI

on:
  push:
    tags:
      - 'v*'  # 匹配所有以 v 开头的标签，如 v1.0.0
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 代码
      - uses: actions/checkout@v4

      # 2. 设置 Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. 设置 Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          
      # 4. 准备签名
      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-keystore.jks

      - name: Set up keystore env
        run: |
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      # 5. 安装依赖
      - name: Install dependencies
        run: flutter pub get

      # 6. 构建 APK
      - name: Build APK
        run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64
        
      # 7. 生成 version.json
      - name: Generate version.json (safe echo version)
        run: |
          echo '{' > version.json
          echo '  "version": "${{ github.event.inputs.tag_name || github.ref_name }}",' >> version.json
          echo '  "build_number": 1,' >> version.json
          echo '  "apk_url": "http://chuankuan.com.cn/appupdate/build/app/outputs/flutter-apk/app-release.apk",' >> version.json
          echo '  "changelog": "自动构建上传"' >> version.json
          echo '}' >> version.json
          
      - name: 🔍 List generated files
        run: ls -l build/app/outputs/flutter-apk/

      # 8. 上传 version.json 和所有 APK 到服务器
      # 上传 version.json
      - name: Upload version.json to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: version.json
          target: /www/wwwroot/yujianyifeng/appupdate/
          debug: true

      # 上传 APK
      - name: Upload APK to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: build/app/outputs/flutter-apk/app-release.apk
          target: /www/wwwroot/yujianyifeng/appupdate/
          debug: true

      # 9. 创建 GitHub Release
      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          files: build/app/outputs/flutter-apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
